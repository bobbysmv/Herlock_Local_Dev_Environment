doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    style.
       html,body { margin: 0; padding: 0; border:0 }
    script(src='http://bobbysmv.github.io/Herlock.js-for-Web/built/herlock.js', charset='UTF-8')

  body
    script.
        herlock.require([ "Player" ],function( Player ) {

            // params
            var params = (function(){
                var tmp = location.search.split("?")[1];
                var result = {};
                if( !tmp ) return result;
                tmp.split("&").forEach(function(v){var w=v.split("=");result[w[0]]=w[1];});
                return result;
            })();

            // options
            var mainJsURL = params.proj? params.proj+"/main.js": null;
            var options = params;
            options.width = options.width || options.w || 640;
            options.height = options.height || options.h || 960;

            // container
            options.container = document.createElement("div");
            document.body.appendChild( options.container );

            // player
            player = new Player( mainJsURL, options );


            if( options.useViewCSS || options.useViewCanvas ) {
                // 取り急ぎスマホ向け
                // screen.availHeight?
                // scroll禁止
                options.container.style.overflow = "hidden";
                document.body.style.overflow = "hidden";
                return;
            }

            // adjust container size
            adjustContainerSize();
            window.addEventListener("resize", adjustContainerSize);
            function adjustContainerSize() {
                var container = options.container;
                container.style.transformOrigin = "0 0";

                var measure = document.createElement("div");
                measure.setStyle = function(params){ for(var k in params)this.style[k]=params[k]; };
                measure.setStyle({position:"absolute",top:0,bottom:0,left:0,right:0});

                document.body.appendChild(measure);
                var layerWidth = measure.clientWidth;
                var layerHeight = measure.clientHeight;
                var layerAspectRatio = layerWidth / layerHeight;
                document.body.removeChild(measure);

                var contentWidth = options.width;
                var contentHeight = options.height;
                var contentAspectRatio = contentWidth / contentHeight;

                // 画面内に収まるように
                var scale;
                if( layerAspectRatio < contentAspectRatio )
                    scale = layerWidth / contentWidth;// 水平幅をあわせる
                else
                    scale = layerHeight / contentHeight;// 垂直幅をあわせる

                container.style.transform = "scale("+scale+","+scale+")";
            }
        });